name: deploy_to_cocoapods

permissions:
  contents: write
  pull-requests: write
  
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      
jobs:
  release:
    if: contains(github.event.pull_request.labels.*.name, 'bump-ios-sdk')
    runs-on: self-hosted
    steps:
    - name: Checkout 
      uses: actions/checkout@v4
      
    - name: Auto-merge bump PRs
      run: |
        echo "‚û°Ô∏è Auto-merge allowed for PR #${{ github.event.pull_request.number }}"
        gh pr merge ${{ github.event.pull_request.number }} --rebase --delete-branch
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Checkout updated main after merge
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 1      

    - name: Export latest tag to Github environment variable
      run: echo "LATEST_SDK_VERSION=$(git tag --sort=-creatordate | head -n 1)" >> $GITHUB_ENV
      
    - name: Download SDK zip from release
      run: |
        echo "üì¶ Downloading SDK release asset for version: ${{ env.LATEST_SDK_VERSION }}"
        gh release download ${{ env.LATEST_SDK_VERSION }} \
          --repo ${{ github.repository }} \
          --pattern "Utiq-${{ env.LATEST_SDK_VERSION }}.zip" \
          --dir .
        echo "‚úÖ Download complete, listing files in current directory:"
        ls -lh .
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Unzip SDK
      run: |
        echo "üìÇ Unzipping SDK package: Utiq-${{ env.LATEST_SDK_VERSION }}.zip"
        unzip -o Utiq-${{ env.LATEST_SDK_VERSION }}.zip -d .
        echo "‚úÖ Unzip complete. Listing extracted contents:"
        ls -R .
        echo "üîç Checking if Utiq.xcframework exists:"
        if [ -d "Utiq.xcframework" ]; then
          echo "‚úÖ Found Utiq.xcframework"
        else
          echo "‚ùå ERROR: Utiq.xcframework not found!"
          exit 1
        fi
  
    - name: Install Cocoapods
      run: |
        echo "üì¶ Installing CocoaPods..."
        gem install cocoapods
        echo "‚úÖ CocoaPods installed: $(pod --version)"

    - name: Show Podspec contents
      run: |
        echo "üîé Podspec being used:"
        cat Utiq.podspec
    
    - name: Deploy to Cocoapods
      run: |
        echo "üöÄ Starting CocoaPods lint & push for version: ${{ env.LATEST_SDK_VERSION }}"
        set -eo pipefail
        pod lib lint --allow-warnings --verbose --no-clean
        echo "‚úÖ Lint completed successfully"
        pod trunk push --allow-warnings --verbose
        echo "üéâ Successfully pushed Utiq SDK v${{ env.LATEST_SDK_VERSION }} to CocoaPods trunk"
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPOD_TOKEN }}